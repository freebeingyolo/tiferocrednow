plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    signingConfigs {
        mindspore {
            def keystorePropertiesFile = rootProject.file("keystore.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        applicationId "com.css.wondercorefit"

        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
        ndk {
            //设置支持的SO库架构
            //模拟器需用到X86架构， 发布时可去掉
            abiFilters "armeabi-v7a","x86" //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.mindspore
        }
        debug {
            signingConfig signingConfigs.mindspore
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    applicationVariants.all { v ->
        //v.getPackageApplicationProvider().get().outputDirectory = new File(rootDir, "apk")
        //v.getPackageApplicationProvider().get().outputDirectory = new File("$rootDir/apk")
        v.outputs.all {
            // 输出apk名称为WonderCoreFit_v1.0_2018-08-13_D.apk,d表示debug版本，r表示release版本
            def targetFileNamePrefix
            targetFileNamePrefix = v.buildType.name.equals("release") ? "r" : "d"
            def releaseTime = new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
            def fileName = "WonderCoreFit_v${defaultConfig.versionName}_${releaseTime}_${targetFileNamePrefix}.apk"
            outputFileName = fileName
        }
    }
    repositories {
        flatDir {
            dir '../lib_ble/libs'
        }
    }
}

//UTC:世界统一时间，不属于任意时区
def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC"))
}

dependencies {
//    implementation fileTree(includes: ['*.jar'],dir:"libs")
    implementation project(':lib_base')
    implementation project(':lib_step')
    implementation project(':lib_login')
    implementation project(':lib_ble')
    implementation dep.liteplayer
    implementation 'com.danikula:videocache:2.7.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation project(':lib_qrscan')
    api dep.multidex
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.google.android.material:material:1.2.1'
    kapt dep.arouter_compiler
    api dep.kt_core
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}